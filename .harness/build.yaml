template:
  name: go-build-stage
  identifier: go_build_stage
  versionLabel: v1
  type: Stage
  projectIdentifier: default_project
  orgIdentifier: default
  spec:
    type: CI
    spec:
      type: CI
      spec:
        cloneCodebase: true
        infrastructure:
          type: KubernetesDirect
          spec:
            connectorRef: harnessk8sconnector
            namespace: go-test
            automountServiceAccountToken: true
            nodeSelector: {}
            os: Linux
      execution:
        steps:
          - step:
              type: Run
              name: run unit test
              identifier: run_unit_test
              spec:
                connectorRef: <+input>
                image: golang:1.15
                shell: Sh
                command: |-
                  set +e
                  go get gotest.tools/gotestsum
                  gotestsum --format=standard-verbose --junitfile unit-tests.xml
                  exit 0
                reports:
                  type: JUnit
                  spec:
                    paths:
                      - "*.xml"
          - step:
              type: Run
              name: go build
              identifier: go_build
              spec:
                connectorRef: <+input>
                image: golang:1.15
                shell: Sh
                command: |-
                  set +e
                  go get gotest.tools/gotestsum
                  CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -tags netgo
                  exit 0
          - step:
              type: BuildAndPushDockerRegistry
              name: Build And Push Docker Registry
              identifier: Build_And_Push_Docker_Registry
              spec:
                connectorRef: <+input>
                repo: <+input>
                tags:
                  - latest